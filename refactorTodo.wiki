=The last thing I was working on=
working on encrypting the passwords, then setting up registration with encryption 
Got that done. I guess the next thing would be registration + auth

So I have a registration with encrypted passwords set up somewhat. 
The major kinks are worked out I think, as far as it actually working is concerned. 
But I still want to come to a better understanding of the promise concept
and see if there's a better way to do it. 

For the understanding stuff I think I'll defer that to another time and place. 
Perhaps coffee and code and ask advice, perhaps the internet. 

The task for tonight and in the morning will be making a useful registration that I'll 
elaborate on below. 

What I'm planning to do right now: work on the login



=A local to do list for this project=

* [o] fix how posts work
    * [X] The front part needs to be worked on, postclass and option helpers I think
        * [X] First order of business is fixing the posts collection and adding userid/privilege
            * [X] Maybe write a short script to do it programmatically? 
        * [X] After that I will just update postclass to work with the new context
    * [ ] 
* [ ] HTTPS
    * [ ] So the actual secure method would cost money, based on what I've read. 
          This will remain unchecked indefinitely I guess. 
          Although Apparently lets encrypt is a free certificate authority? 
* [ ] Add authorization/authentication based views
    * [ ] 
    * [ ] Users should be able to post
    * [ ] Admin should have remove post option as well
    * [ ] Guests should only be able to read it, but maybe find something guests can do
* [O] Set up a good user registration
    * [X] Something that takes passwords, encrypts and salts them
        * [X] Figure out how to use Bcrypt
        * [X] Encrypt my current user's passwords
    * [X] Implement Bcrypt on the registration
    * [.] I need to clean it up somewhat
        * [X] Can't let people have the same username
        * [ ] This is a general thing as well but sanitizing inputs is probably important. 
        * [ ] 
* [ ] Set up a way to reset the password
* [ ] Once I have different abilities based on privilege, add some more
    * [ ] Turn the posts page into a forum thread
    * [ ] It would start as a basic forum, users can create more threads, admins delete/modify


=Side project=
* [ ] Another useful thing would be figuring out how to efficiently test stuff. It seems like a curl might be easier to do than loading the page in firefox. Maybe script that runs node + curl and exits? 
    * [ ] Figure out quick methods for testing my particular situation
    * [ ] investigate if there are more established/useful things that are applicable
* Node dashboard looks really cool. I don't know if I have any *real* use for it just yet. 
  
                                                                      But it looks cool. 



=Learned things=
I think some of the problems with promisifications had to do with 1. the
mongojs library and 2. I didn't use the Async suffix.  
